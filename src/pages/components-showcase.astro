---
// Component Showcase - Hidden development page
// Access via /components-showcase
import Layout from '../layouts/Layout.astro';
---

<Layout title="Component Showcase - Project Claw" description="A comprehensive showcase of all available React components and their variations">
<div class="bg-gray-50 dark:bg-gray-900 min-h-screen">
  <div class="container mx-auto px-4 py-8">
    <header class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">
        Component Showcase
      </h1>
      <p class="text-gray-600 dark:text-gray-400">
        A comprehensive showcase of all available React components and their variations
      </p>
      <div class="mt-4 flex space-x-4">
        <button 
          id="theme-toggle" 
          class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          Toggle Dark Mode
        </button>
        <a 
          href="/" 
          class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
        >
          Back to App
        </a>
      </div>
    </header>

    <div id="showcase-root"></div>
  </div>

  <script type="module">
    // Theme toggle functionality
    const themeToggle = document.getElementById('theme-toggle');
    const html = document.documentElement;
    
    themeToggle.addEventListener('click', () => {
      html.classList.toggle('dark');
    });
  </script>
  
  <script type="module">
    // Simple showcase without complex React components
    const showcaseRoot = document.getElementById('showcase-root');
    
    showcaseRoot.innerHTML = `
      <!-- Message System Examples -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Message System</h2>
        <div class="space-y-4">
          <div class="flex flex-wrap gap-2 mb-4">
            <button id="add-success" class="px-3 py-2 bg-green-600 text-white rounded hover:bg-green-700">Add Success</button>
            <button id="add-error" class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700">Add Error</button>
            <button id="add-warning" class="px-3 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700">Add Warning</button>
            <button id="add-info" class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Add Info</button>
          </div>
          <div id="message-container" class="space-y-3 max-w-2xl"></div>
        </div>
      </section>

      <!-- Progress Indicator Examples -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Progress Indicators</h2>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div>
            <h3 class="text-lg font-semibold mb-2">In Progress</h3>
            <div class="space-y-3">
              <div class="flex justify-between items-center text-sm">
                <span class="font-medium text-gray-700 dark:text-gray-300">Processing anime records...</span>
                <span class="text-gray-500 dark:text-gray-400">65%</span>
              </div>
              <div class="bg-gray-200 dark:bg-gray-700 rounded-full h-3 overflow-hidden">
                <div class="h-full rounded-full bg-blue-500 transition-all duration-500 ease-out" style="width: 65%">
                  <div class="h-full bg-gradient-to-r from-transparent via-white/20 to-transparent animate-pulse"></div>
                </div>
              </div>
              <div class="text-xs text-gray-500 dark:text-gray-400 text-center">
                Estimated time remaining: 30 seconds
              </div>
            </div>
          </div>
          <div>
            <h3 class="text-lg font-semibold mb-2">Completed</h3>
            <div class="space-y-3">
              <div class="flex justify-between items-center text-sm">
                <span class="font-medium text-gray-700 dark:text-gray-300">Operation completed</span>
                <span class="text-gray-500 dark:text-gray-400">100%</span>
              </div>
              <div class="bg-gray-200 dark:bg-gray-700 rounded-full h-3 overflow-hidden">
                <div class="h-full rounded-full bg-green-500 transition-all duration-500 ease-out" style="width: 100%"></div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Timeline Badge Examples -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Timeline Badges</h2>
        <div class="space-y-4">
          <div>
            <h3 class="text-lg font-semibold mb-2">Different Types</h3>
            <div class="flex flex-wrap gap-4">
              <div class="timeline-badge relative px-2 py-1 rounded-lg text-xs font-medium bg-blue-500 text-white ring-2 ring-blue-400 ring-offset-2 ring-offset-white dark:ring-offset-gray-800">
                <div class="flex flex-col items-center space-y-0.5">
                  <div class="font-semibold">TV</div>
                  <div class="opacity-90">2013</div>
                  <div class="opacity-80 text-xs">25ep (24m)</div>
                </div>
                <div class="absolute -top-1 -right-1 w-3 h-3 bg-blue-400 rounded-full border-2 border-white dark:border-gray-800"></div>
              </div>
              <div class="timeline-badge px-2 py-1 rounded-lg text-xs font-medium bg-purple-500 text-white">
                <div class="flex flex-col items-center space-y-0.5">
                  <div class="font-semibold">Movie</div>
                  <div class="opacity-90">2014</div>
                  <div class="opacity-80 text-xs">1ep (120m)</div>
                </div>
              </div>
              <div class="timeline-badge px-2 py-1 rounded-lg text-xs font-medium bg-green-500 text-white">
                <div class="flex flex-col items-center space-y-0.5">
                  <div class="font-semibold">OVA</div>
                  <div class="opacity-90">2015</div>
                  <div class="opacity-80 text-xs">6ep (30m)</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Loading Skeletons -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Loading Skeletons</h2>
        <div class="space-y-4">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div>
              <h4 class="text-sm font-medium mb-2">Card Skeleton</h4>
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4">
                <div class="animate-pulse">
                  <div class="bg-gray-300 dark:bg-gray-600 h-4 rounded mb-2"></div>
                  <div class="bg-gray-300 dark:bg-gray-600 h-3 rounded mb-2 w-3/4"></div>
                  <div class="bg-gray-300 dark:bg-gray-600 h-3 rounded w-1/2"></div>
                </div>
              </div>
            </div>
            <div>
              <h4 class="text-sm font-medium mb-2">List Item Skeleton</h4>
              <div class="flex items-center space-x-3">
                <div class="animate-pulse">
                  <div class="bg-gray-300 dark:bg-gray-600 h-10 w-10 rounded-full"></div>
                </div>
                <div class="flex-1 animate-pulse">
                  <div class="bg-gray-300 dark:bg-gray-600 h-4 rounded mb-1"></div>
                  <div class="bg-gray-300 dark:bg-gray-600 h-3 rounded w-2/3"></div>
                </div>
              </div>
            </div>
            <div>
              <h4 class="text-sm font-medium mb-2">Text Skeleton</h4>
              <div class="animate-pulse space-y-2">
                <div class="bg-gray-300 dark:bg-gray-600 h-3 rounded"></div>
                <div class="bg-gray-300 dark:bg-gray-600 h-3 rounded w-5/6"></div>
                <div class="bg-gray-300 dark:bg-gray-600 h-3 rounded w-4/6"></div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- UI Components -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">UI Components</h2>
        <div class="space-y-6">
          <div>
            <h3 class="text-lg font-semibold mb-2">Buttons</h3>
            <div class="flex flex-wrap gap-2">
              <button class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">Primary</button>
              <button class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">Secondary</button>
              <button class="px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">Outline</button>
              <button class="px-4 py-2 text-blue-600 hover:text-blue-700 hover:bg-blue-50 dark:hover:bg-blue-900/20 rounded-lg transition-colors">Text</button>
            </div>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold mb-2">Cards</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
                <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Card Title</h4>
                <p class="text-gray-600 dark:text-gray-400">This is a sample card with some content.</p>
              </div>
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
                <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Another Card</h4>
                <p class="text-gray-600 dark:text-gray-400">Cards can contain various types of content.</p>
              </div>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-semibold mb-2">Form Elements</h3>
            <div class="space-y-4 max-w-md">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Text Input</label>
                <input type="text" placeholder="Enter some text..." class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Select</label>
                <select class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white">
                  <option>Option 1</option>
                  <option>Option 2</option>
                  <option>Option 3</option>
                </select>
              </div>
            </div>
          </div>

          <div>
            <h3 class="text-lg font-semibold mb-2">Spinners</h3>
            <div class="flex items-center space-x-4">
              <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
              <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-green-600"></div>
              <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-red-600"></div>
            </div>
          </div>
        </div>
      </section>

      <!-- Component Props Reference -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Component Props Reference</h2>
        <div class="space-y-6">
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
            <h3 class="text-lg font-semibold mb-4">Available React Components</h3>
            <div class="space-y-4 text-sm">
              <div>
                <h4 class="font-semibold text-gray-900 dark:text-white">MessageSystem</h4>
                <div class="ml-4 space-y-1 text-gray-600 dark:text-gray-400">
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">messages: Message[]</code> - Array of messages</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">onRemoveMessage: (id: string) => void</code> - Remove callback</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">maxMessages?: number</code> - Max messages (default: 5)</div>
                </div>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900 dark:text-white">ProgressIndicator</h4>
                <div class="ml-4 space-y-1 text-gray-600 dark:text-gray-400">
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">progress: ProgressState</code> - Progress state object</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">showSteps?: boolean</code> - Show steps (default: true)</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">showTimeEstimate?: boolean</code> - Show time estimate (default: true)</div>
                </div>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900 dark:text-white">AnimeCard</h4>
                <div class="ml-4 space-y-1 text-gray-600 dark:text-gray-400">
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">anime: Anime</code> - Anime data object</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">onRemove: (id: number) => void</code> - Remove callback</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">timeline?: SeriesTimeline</code> - Timeline data</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">timelineLoading?: boolean</code> - Loading state</div>
                </div>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900 dark:text-white">TimelineBadge</h4>
                <div class="ml-4 space-y-1 text-gray-600 dark:text-gray-400">
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">entry: TimelineEntry</code> - Timeline entry data</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">isCurrentAnime: boolean</code> - Is current anime</div>
                  <div><code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">isConnected: boolean</code> - Show connector</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    `;

    // Add message system functionality
    let messageId = 0;
    const messageContainer = document.getElementById('message-container');
    
    function addMessage(type, message, title) {
      const id = ++messageId;
      const messageEl = document.createElement('div');
      const colors = {
        success: 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800 text-green-800 dark:text-green-200',
        error: 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800 text-red-800 dark:text-red-200',
        warning: 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800 text-yellow-800 dark:text-yellow-200',
        info: 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800 text-blue-800 dark:text-blue-200'
      };
      
      messageEl.className = `p-4 border rounded-lg shadow-sm ${colors[type]}`;
      messageEl.innerHTML = `
        <div class="flex items-start">
          <div class="flex-1">
            ${title ? `<h4 class="text-sm font-medium mb-1">${title}</h4>` : ''}
            <div class="text-sm">${message}</div>
            <div class="text-xs opacity-75 mt-2">${new Date().toLocaleTimeString()}</div>
          </div>
          <button onclick="this.parentElement.parentElement.remove()" class="ml-4 p-1 hover:bg-black/5 dark:hover:bg-white/5 rounded">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
      `;
      
      messageContainer.appendChild(messageEl);
      
      if (type === 'success') {
        setTimeout(() => messageEl.remove(), 5000);
      }
    }
    
    document.getElementById('add-success').onclick = () => addMessage('success', 'Operation completed successfully!');
    document.getElementById('add-error').onclick = () => addMessage('error', 'Something went wrong!', 'Error');
    document.getElementById('add-warning').onclick = () => addMessage('warning', 'Please review your settings');
    document.getElementById('add-info').onclick = () => addMessage('info', 'New feature available!');
  </script>
</div>
</Layout>